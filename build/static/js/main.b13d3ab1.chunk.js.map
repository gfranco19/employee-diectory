{"version":3,"sources":["FilterInput.js","components/card/Card.js","components/col/Col.js","components/row/Row.js","App.js","utils/API.js","index.js"],"names":["FilterInput","employees","updateEmployees","useState","inputValue","updateInput","useEffect","filteredEmployees","filter","name","first","toLowerCase","indexOf","value","onChange","e","target","Card","sortedemployees","updateSortedemployees","className","onClick","updateSort","sort","a","b","nameA","nameB","map","location","city","state","postcode","medium","picture","cell","phone","email","last","src","alt","Col","props","size","split","join","children","Row","fluid","App","initialEmployees","updateAvailableEmployees","employeesToRender","updateEmployeesToRender","axios","get","then","results","data","ReactDOM","render","document","getElementById"],"mappings":"gLAuBeA,EApBK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBAAsB,EACpBC,mBAAS,IADW,mBAC/CC,EAD+C,KACnCC,EADmC,KAetD,OAZAC,qBAAU,WACR,IAAMC,EACW,KAAfH,EACIH,EACAA,EAAUO,QACR,qBAAGC,KAAQC,MACHC,cAAcC,QAAQR,EAAWO,gBAAkB,KAGnET,EAAgBK,KACf,CAACH,EAAYH,IAGd,uBAAOY,MAAOT,EAAYU,SAAU,SAAAC,GAAC,OAAIV,EAAYU,EAAEC,OAAOH,W,QCuCnDI,MAxDf,YAA4B,IAAbhB,EAAY,EAAZA,UAAY,EACwBE,mBAAS,IADjC,mBAClBe,EADkB,KACDC,EADC,KAKzB,OAFAb,qBAAU,kBAAMa,EAAsBlB,KAAY,CAACA,IAGjD,sBAAKmB,UAAU,mBAAf,UACE,qBAAKA,UAAU,gBAEf,qBAAKA,UAAU,YAAWC,QAAS,WACzB,IACMC,EADa,YAAOrB,GACOsB,MAAK,SAACC,EAAGC,GACxC,IAAMC,EAAQF,EAAEf,KAAKC,MACfiB,EAAQF,EAAEhB,KAAKC,MAErB,OAAIgB,EAAQC,GACF,EAEND,EAAQC,EACH,EAGF,KAGTR,EAAsBG,MAExB,qBAAKF,UAAU,YAAf,SACGF,EAAgBU,KACrB,oBACEC,SAAYC,EADd,EACcA,KAAMC,EADpB,EACoBA,MAAOC,EAD3B,EAC2BA,SACdC,EAFb,EAEEC,QAAWD,OACXE,EAHF,EAGEA,KACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,MALF,IAME5B,KAAQC,EANV,EAMUA,MAAO4B,EANjB,EAMiBA,KANjB,OAQE,sBAAKlB,UAAW,GAAhB,UAEA,+BACE,qBAAMmB,IAAKN,EAAQO,IAAO9B,EAAQ4B,IAClC,+BAAK5B,EAAL,IAAa4B,KACb,wCAAWD,KACX,uCAAUD,KACV,uCAAUD,KACV,0CAAaL,EAAb,KAAqBC,EAArB,IAA6BC,QAR/B,8DAA0BtB,Y,iBCxBzB+B,MAVf,SAAaC,GACX,IAAMC,EAAOD,EAAMC,KAAKC,MAAM,KAAKhB,KAAI,SAAAe,GAAI,MAAI,OAASA,KAAME,KAAK,KAEnE,OACE,qBAAKzB,UAAWuB,EAAhB,SACGD,EAAMI,YCJEC,MAJf,SAAaL,GACX,OAAO,qBAAKtB,UAAS,aAAQsB,EAAMM,MAAQ,SAAW,IAA/C,SAAsDN,EAAMI,YC8BtDG,MAzBf,WAAgB,IAAD,EACwC9C,mBAAS,IADjD,mBACN+C,EADM,KACYC,EADZ,OAEwChD,mBAAS,IAFjD,mBAENiD,EAFM,KAEaC,EAFb,KAQb,OAJA/C,qBAAU,WCTHgD,IAAMC,IAAI,+CDUAC,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAA2BN,EAAyBM,QACvE,IAGD,sBAAKrC,UAAU,MAAf,UACE,oDACA,sEAEA,cAAC,EAAD,CAAanB,UAAWiD,EAAkBhD,gBAAiBmD,OAE3D,cAAC,EAAD,UAEE,cAAC,EAAD,CAAKV,KAAK,QAAV,SACF,cAAC,EAAD,CAAM1C,UAAWmD,Y,MEpBvBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b13d3ab1.chunk.js","sourcesContent":["  \nimport React, { useEffect, useState } from \"react\";\n\nconst FilterInput = ({ employees, updateEmployees }) => {\n  const [inputValue, updateInput] = useState(\"\");\n\n  useEffect(() => {\n    const filteredEmployees =\n      inputValue === \"\"\n        ? employees\n        : employees.filter(\n            ({ name: { first } }) =>\n              first.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\n          );\n\n    updateEmployees(filteredEmployees);\n  }, [inputValue, employees]);\n\n  return (\n    <input value={inputValue} onChange={e => updateInput(e.target.value)} />\n  );\n};\n\nexport default FilterInput;","import React, { useState, useEffect } from \"react\";\n\nfunction Card({employees}) {\n  const [sortedemployees, updateSortedemployees] = useState([]);\n\n  useEffect(() => updateSortedemployees(employees), [employees]);\n\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n      </div>\n      <div className=\"card-body\"onClick={() => {\n                const employeesCopy = [...employees];\n                const updateSort = employeesCopy.sort((a, b) => {\n                  const nameA = a.name.first;\n                  const nameB = b.name.first;\n\n                  if (nameA < nameB) {\n                    return -1;\n                  }\n                  if (nameA > nameB) {\n                    return 1;\n                  }\n\n                  return 0;\n                });\n\n                updateSortedemployees(updateSort);\n              }}></div>\n              <div className=\"card-body\" >\n                {sortedemployees.map(\n            ({\n              location: { city, state, postcode },\n              picture: { medium },\n              cell,\n              phone,\n              email,\n              name: { first, last}\n            }) => (\n              <div className= \"\" key = {first}>\n                \n              <ul>\n                <img  src={medium} alt = {first + last}/>\n                <h6>{first} {last}</h6>\n                <p>Email: {email}</p>\n                <p>Home: {phone}</p>\n                <p>Cell: {cell}</p>\n                <p>Address: {city}, {state} {postcode}</p>\n                </ul>\n                ---------------------------------------------------------\n                \n             </ div>\n            )\n          )}</div>\n    </div>\n  );\n}\n\nexport default Card;\n\n","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Row;","import React, { useEffect, useState } from \"react\";\nimport FilterInput from \"./FilterInput\";\nimport Card from \"./components/card/Card\";\nimport { getEmployees } from \"./utils/API\";\nimport Col from \"./components/col/Col\";\nimport Row from \"./components/row/Row\";\n\n\nfunction App() {\n  const [initialEmployees, updateAvailableEmployees] = useState([]);\n  const [employeesToRender, updateEmployeesToRender] = useState([]);\n\n  useEffect(() => {\n    getEmployees().then(({ data: { results } }) => updateAvailableEmployees(results));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Employee Directory</h1>\n      <p>\n       PLease enter an employees first name: \n      <FilterInput employees={initialEmployees} updateEmployees={updateEmployeesToRender} />\n      </p>\n      <Row>\n        \n        <Col size=\"md-12\">\n      <Card employees={employeesToRender} />\n      </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n//test"," import axios from \"axios\";\n\nexport const getEmployees = function() {\n  return axios.get(\"https://randomuser.me/api/?results=8&nat=us\");\n};","  \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}